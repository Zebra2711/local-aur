# Maintainer: Daniel Bermond <dbermond@archlinux.org>

NTSYNC=1
pkgname=wine-staging-git
pkgver=10.3.r230.ntsync.g3323a7e4474
pkgrel=1
pkgdesc='A compatibility layer for running Windows programs (staging branch, git version)'
arch=('x86_64')
url='https://www.wine-staging.com/'
license=('LGPL-2.1-or-later')
depends=(
    'attr'             'lib32-attr'
    'fontconfig'       'lib32-fontconfig'
    'libxcursor'       'lib32-libxcursor'
    'libxrandr'        'lib32-libxrandr'
    'libxi'            'lib32-libxi'
    'gettext'          'lib32-gettext'
    'freetype2'        'lib32-freetype2'
    'gcc-libs'         'lib32-gcc-libs'
    'libpcap'          'lib32-libpcap'
    'desktop-file-utils'
)
makedepends=(autoconf bison perl flex mingw-w64-gcc
  git
  giflib                lib32-giflib
  gnutls                lib32-gnutls
  libxinerama           lib32-libxinerama
  libxcomposite         lib32-libxcomposite
  libxxf86vm            lib32-libxxf86vm
  v4l-utils             lib32-v4l-utils
  alsa-lib              lib32-alsa-lib
  libxcomposite         lib32-libxcomposite
  mesa                  lib32-mesa
  mesa-libgl            lib32-mesa-libgl
  opencl-icd-loader     lib32-opencl-icd-loader
  libpulse              lib32-libpulse
  libva                 lib32-libva
  gtk3                  lib32-gtk3
  gst-plugins-base-libs lib32-gst-plugins-base-libs
  vulkan-icd-loader     lib32-vulkan-icd-loader
  sdl3                  lib32-sdl3
  sdl2-compat           lib32-sdl2-compat
  libcups               lib32-libcups
  sane
  libgphoto2
  ffmpeg
  samba
  opencl-headers
)

optdepends=(
    'giflib'                'lib32-giflib'
    'gnutls'                'lib32-gnutls'
    'v4l-utils'             'lib32-v4l-utils'
    'libpulse'              'lib32-libpulse'
    'alsa-plugins'          'lib32-alsa-plugins'
    'alsa-lib'              'lib32-alsa-lib'
    'libxcomposite'         'lib32-libxcomposite'
    'libxinerama'           'lib32-libxinerama'
    'opencl-icd-loader'     'lib32-opencl-icd-loader'
    'opencl-nvidia'         'lib32-opencl-nvidia'
    'libva'                 'lib32-libva'
    'gtk3'                  'lib32-gtk3'
    'gst-plugins-base-libs' 'lib32-gst-plugins-base-libs'
    'vulkan-icd-loader'     'lib32-vulkan-icd-loader'
    'sdl3'                  'lib32-sdl3'
    'sdl2-compat'           'lib32-sdl2-compat'
    'sane'
    'libgphoto2'
    'ffmpeg'
    'cups'                  'lib32-libcups'
    'samba'
    'dosbox'
    'wine-gecko'
    'wine-mono'
)
_tkg_commit=b23227964ea3dcac210603a0a6ffd3ca91d3e10e
options=('staticlibs' '!lto' '!debug')
install="${pkgname}.install"
provides=("wine-staging=${pkgver}" "wine=${pkgver%%.r*}" 'wine-wow64')
conflicts=('wine' 'wine-wow64')
source=('git+https://gitlab.winehq.org/wine/wine-staging.git'
        'git+https://gitlab.winehq.org/wine/wine.git'
        '30-win32-aliases.conf'
        'wine-binfmt.conf'
        "git+https://github.com/Frogging-Family/wine-tkg-git.git#commit=${_tkg_commit}"
        '0001-win32u-Update-Nvidia-s-DriverVersion-to-999.99.patch'
        'wine-ntsync.patch'
        'wine-wmclass.patch'
        'wine-isolate_home.patch')
sha256sums=('SKIP'
            'SKIP'
            '9901a5ee619f24662b241672a7358364617227937d5f6d3126f70528ee5111e7'
            '6dfdefec305024ca11f35ad7536565f5551f09119dda2028f194aee8f77077a4'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP')

prepare() {
    # Allow ccache to work
    #mv wine $pkgname

    # Get rid of old build dirs
    rm -rf build-{32,64}
    mkdir -p build-{32,64}

    # restore the wine tree to its git origin state, without wine-staging patches
    printf '%s\n' '  -> Cleaning wine source code tree...'
    git -C wine reset --hard HEAD  # restore tracked files
    git -C wine clean -xdf         # delete untracked files

    # change back to the wine ustream commit that this version of wine-staging is based in
    #printf '%s\n' '  -> Changing wine HEAD to the wine-staging base commit...'
    #git -C wine config --local advice.detachedHead false
    #git -C wine checkout "$(wine-staging/staging/patchinstall.py --upstream-commit)"


    # apply all wine-staging patches
    printf '%s\n' '  -> Applying wine-staging patches...'
    wine-staging/staging/patchinstall.py DESTDIR="${srcdir}/wine" --all \
    --no-autoconf \
    -W eventfd_synchronization \
    -W server-PeekMessage \
    -W server-Signal_Thread
    #-W d3dx9_SetRawValue

    if [[ "$NTSYNC" -eq "1" ]]; then
      patch -Np1 --verbose -d wine -i "$srcdir"/wine-ntsync.patch
    fi

    _tkg_path="$srcdir"/wine-tkg-git/wine-tkg-git/wine-tkg-patches
    patch -Np1 -d wine -i "$_tkg_path"/proton/LAA/LAA-unix-staging.patch
    patch -Np1 -d wine -i "$_tkg_path"/proton/msvcrt_nativebuiltin/msvcrt_nativebuiltin_mainline.patch
    patch -Np1 -d wine -i "$_tkg_path"/proton/proton-win10-default/proton-win10-default.patch



    patch -Np1 -d wine -i "$srcdir"/wine-wmclass.patch
    patch -Np1 -d wine -i "$srcdir"/wine-isolate_home.patch
    # patch -Np1 -d wine -i "$srcdir"/0001-win32u-Update-Nvidia-s-DriverVersion-to-999.99.patch
    sudo -v
    cd wine
    ./tools/make_requests
    ./dlls/winevulkan/make_vulkan
    ./tools/make_specfiles
    autoreconf -fiv
}

pkgver() {
    _pkgver=$(git -C wine describe --long --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/^wine\.//;s/^v//;s/\.rc/rc/')
    if [[ "$NTSYNC" -eq "1" ]]; then
        echo "$_pkgver" | sed 's/g/ntsync.g/'
    else
        echo "$_pkgver"
    fi
}

build() {
    # Doesn't compile without remove these flags as of 4.10
    # incompatible-pointer-types: https://bugs.gentoo.org/919758
    export CFLAGS="$CFLAGS -ffat-lto-objects -Wno-error=incompatible-pointer-types"

    # apply flags for cross-compilation
    export CROSSCFLAGS="-O2 -pipe"
    export CROSSCXXFLAGS="-O2 -pipe"
    export CROSSLDFLAGS="-Wl,-O1"

    local -a split=($CFLAGS)
    local -A flags
    for opt in "${split[@]}"; do flags["${opt%%=*}"]="${opt##*=}"; done
    local march="${flags["-march"]:-nocona}"
    local mtune="${flags["-mtune"]:-core-avx2}"

    # From Proton
    OPTIMIZE_FLAGS="-O3 -march=$march -mtune=$mtune -mfpmath=sse -pipe"
    SANITY_FLAGS="-fwrapv -fno-strict-aliasing"
    WARNING_FLAGS="-Wno-incompatible-pointer-types"
    STRIP_FLAGS="-s"
    COMMON_FLAGS="$OPTIMIZE_FLAGS $SANITY_FLAGS $WARNING_FLAGS $STRIP_FLAGS"

    COMMON_LDFLAGS="-Wl,-O1,--sort-common,--as-needed"

    export LDFLAGS="$COMMON_LDFLAGS $LTO_LDFLAGS"
    export CROSSLDFLAGS="$COMMON_LDFLAGS -Wl,--file-alignment,4096"


    # build wine-staging 64-bit
    # (according to the wine wiki, this 64-bit/32-bit building order is mandatory)
    printf '%s\n' '  -> Building wine-staging-64...'
    export CFLAGS="$COMMON_FLAGS -mcmodel=small $LTO_CFLAGS"
    export CXXFLAGS="$COMMON_FLAGS -mcmodel=small -std=c++17 $LTO_CFLAGS"
    export CROSSCFLAGS="$COMMON_FLAGS -mcmodel=small"
    export CROSSCXXFLAGS="$COMMON_FLAGS -mcmodel=small -std=c++17"
    export PKG_CONFIG_PATH="/usr/lib/pkgconfig:/usr/share/pkgconfig"
    cd "${srcdir}/build-64"
    ../wine/configure \
        --prefix='/usr' \
        --libdir='/usr/lib' \
        --with-x \
        --with-wayland \
        --with-gstreamer \
        --with-mingw \
        --with-alsa \
        --without-oss \
        --disable-winemenubuilder \
        --with-xattr \
        --enable-win64 \
        --disable-tests
    make

    # build wine-staging 32-bit
    printf '%s\n' '  -> Building wine-staging-32...'
    export CFLAGS="$COMMON_FLAGS -mstackrealign $LTO_CFLAGS"
    export CXXFLAGS="$COMMON_FLAGS -mstackrealign -std=c++17 $LTO_CFLAGS"
    export CROSSCFLAGS="$COMMON_FLAGS -mstackrealign"
    export CROSSCXXFLAGS="$COMMON_FLAGS -mstackrealign -std=c++17"
    export PKG_CONFIG_PATH="/usr/lib32/pkgconfig:/usr/share/pkgconfig"
    cd "${srcdir}/build-32"
    export PKG_CONFIG_PATH='/usr/lib32/pkgconfig'
    ../wine/configure \
        --prefix='/usr' \
        --libdir='/usr/lib' \
        --with-x \
        --with-wayland \
        --with-gstreamer \
        --with-mingw \
        --with-alsa \
        --without-oss \
        --disable-winemenubuilder \
        --with-xattr \
        --with-wine64="${srcdir}/build-64" \
        --disable-tests
    make
}

package() {
    # package wine-staging 32-bit
    #(according to the wine wiki, this reverse 32-bit/64-bit packaging order is important)
    printf '%s\n' '  -> Packaging wine-staging-32...'
    cd "${srcdir}/build-32"
    make prefix="${pkgdir}/usr" \
         libdir="${pkgdir}/usr/lib" \
         dlldir="${pkgdir}/usr/lib/wine" \
         install

    #mv ${pkgdir}/usr/lib ${pkgdir}/usr/lib32

    # package wine-staging 64-bit
    printf '%s\n' '  -> Packaging wine-staging-64...'
    cd "${srcdir}/build-64"
    make prefix="${pkgdir}/usr" \
         libdir="${pkgdir}/usr/lib" \
         dlldir="${pkgdir}/usr/lib/wine" \
         install

    # font aliasing settings for win32 applications
    install -d -m755 "${pkgdir}/usr/share/fontconfig/conf.default"
    install -D -m644 "${srcdir}/30-win32-aliases.conf" -t "${pkgdir}/usr/share/fontconfig/conf.avail"
    ln -s ../conf.avail/30-win32-aliases.conf "${pkgdir}/usr/share/fontconfig/conf.default/30-win32-aliases.conf"

    # wine binfmt
    install -D -m644 "${srcdir}/wine-binfmt.conf" "${pkgdir}/usr/lib/binfmt.d/wine.conf"

    # strip native PE libraries
    i686-w64-mingw32-strip --strip-unneeded "${pkgdir}/usr/lib/wine/i386-windows"/*.{dll,exe}
    x86_64-w64-mingw32-strip --strip-unneeded "${pkgdir}/usr/lib/wine/x86_64-windows"/*.{dll,exe}

}
# vim:set ts=8 sts=2 sw=2 et:
