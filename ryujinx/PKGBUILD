# Maintainer:zebra2711

# Recoment build BUILD_FROM_SOURCE=0
BUILD_FROM_SOURCE=1
CANARY=0

_pkgname="ryujinx"
pkgver_source=1.3.29
pkgver_binary=1.2.86
pkgver=$([[ "$BUILD_FROM_SOURCE" -eq "1" ]] && echo "$pkgver_source" || echo "$pkgver_binary")
pkgname=$([[ "$BUILD_FROM_SOURCE" -eq "1" ]] && echo "$_pkgname" || echo "$_pkgname-bin")
pkgrel=1
pkgdesc="Experimental Nintendo Switch Emulator written in C#"
url="https://git.ryujinx.app/ryubing/ryujinx"
license=('MIT')
arch=('x86_64')
conflicts=('ryujinx' 'ryujinx-git' 'ryujinx-canary' 'ryujinx-bin')

depends=(
  'alsa-lib'
  'fontconfig'
  'jack'
  'libpulse'
  'libx11'
  'wayland'
)

options=('!strip' '!debug')

if [[ "$BUILD_FROM_SOURCE" -eq "1" ]]; then
  makedepends=(
    "dotnet-sdk${_dotnet_type:-}"
    'desktop-file-utils'
  )
  _commit=adae465b080a43b15fd0ef542ad9ef2ec84e538c
  source=("git+$url.git#commit=${_commit}")
  sha256sums=('SKIP')
elif [[ "$BUILD_FROM_SOURCE" -eq "0" ]]; then
  source=("Ryujinx.desktop::$url/-/raw/master/distribution/linux/Ryujinx.desktop?ref_type=heads"
          "Logo.svg::$url/-/raw/master/distribution/misc/Logo.svg?ref_type=heads"         
  )

  if [[ "$CANARY" -eq "1" ]]; then
    source+=("https://github.com/Ryubing/Canary-Releases/releases/download/${pkgver}/${_pkgname}-canary-${pkgver}-linux_x64.tar.gz")
  else
    source+=("https://github.com/Ryubing/Stable-Releases/releases/download/${pkgver}/${_pkgname}-${pkgver}-linux_x64.tar.gz")
  fi

  sha256sums=('a19dc6e539931df63d4813f787c51f460cf72e0c44b20add1c0c6ef56c47d840'
              '6d8329413c64e2eb8a1706d2cf97e89fc5083b0654468bd6feefe47e61faaad2'
              'SKIP')

fi

build() (
  if [[ "$BUILD_FROM_SOURCE" -eq "1" ]]; then
    export HOME="$SRCDEST/nuget-home"
    export DOTNET_CLI_TELEMETRY_OPTOUT=1

    sudo dotnet workload update

    local _args=(
      -c Release
      -r linux-x64
      --disable-build-servers
      --nologo
      --self-contained true
      -p:DebugType=none
      -p:ExtraDefineConstants=DISABLE_UPDATER
      -p:PublishSingleFile=true
      -p:Version="${pkgver%%.[A-Za-z]*}"
    )

    echo "Building AVA Interface..."
    DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1 \
    dotnet publish "${_args[@]}" -o "$srcdir/publish" "$srcdir/$_pkgname/src/Ryujinx"

    echo "Shutting down dotnet build server in background."
    (timeout -k 45 30 dotnet build-server shutdown) > /dev/null 2>&1 &
  fi
)

package() {
  # Create directories
  install -dm755 "$pkgdir/usr/lib/ryujinx"
  install -dm755 "$pkgdir/usr/share/doc/ryujinx"
  install -dm755 "$pkgdir/usr/bin"


  if [[ "$BUILD_FROM_SOURCE" -eq "1" ]]; then
    _desktop_src="$srcdir/ryujinx/distribution/linux"
    _icon_src="$srcdir/ryujinx/distribution/misc"
  else
    _desktop_src="$srcdir"
    _icon_src="$srcdir"
  fi
  install -Dm644 "$_desktop_src"/Ryujinx.desktop "$pkgdir/usr/share/applications/ryujinx.desktop"
  install -Dm644 "$_icon_src"/Logo.svg "$pkgdir/usr/share/pixmaps/ryujinx.svg"

  # Libraries and binary
  cd "$srcdir/publish"
  install -Dm755 Ryujinx "$pkgdir/usr/lib/ryujinx/"
  install -Dm755 Ryujinx.sh "$pkgdir/usr/lib/ryujinx/"

  
  # Install libraries
  for lib in *.so *.so.* *.dylib; do
    if [ -f "$lib" ]; then
      install -Dm644 "$lib" "$pkgdir/usr/lib/ryujinx/"
    fi
  done
  
  # Config files
  install -Dm644 Ryujinx.SDL2.Common.dll.config "$pkgdir/usr/lib/ryujinx/"
  
  # Documentation
  install -Dm644 THIRDPARTY.md "$pkgdir/usr/share/doc/ryujinx/"
  install -Dm644 LICENSE.txt "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
  
  # Symlink to binary
  ln -s "/usr/lib/ryujinx/Ryujinx" "$pkgdir/usr/bin/ryujinx"

  # mimetype
  install -Dm644 mime/Ryujinx.xml "$pkgdir/usr/share/mime/packages/ryujinx.xml"

  # Fix permissions
  find "$pkgdir" -type d -exec chmod 755 {} \;
  find "$pkgdir" -type f -exec chmod 644 {} \;
  chmod 755 "$pkgdir/usr/lib/ryujinx/Ryujinx"
  chmod 755 "$pkgdir/usr/lib/ryujinx/Ryujinx.sh"
  
  # Fix desktop file
  desktop-file-edit --set-key="Exec" --set-value="ryujinx %f" "$pkgdir/usr/share/applications/ryujinx.desktop"
  desktop-file-edit --set-icon="ryujinx" "$pkgdir/usr/share/applications/ryujinx.desktop"
}